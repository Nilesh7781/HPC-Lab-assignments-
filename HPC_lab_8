8. 	Write a Parallel C program which should print the series of 2  and 4. Make sure both should be executed by different threads. 	
#include <stdio.h>
#include <omp.h>

int main() {
    int n = 10;   // number of terms to print in each series

    // Parallel region with 2 threads
    #pragma omp parallel num_threads(2)
    {
        int tid = omp_get_thread_num(); // thread ID

        if (tid == 0) {
            printf("Thread %d printing series of 2:\n", tid);
            for (int i = 1; i <= n; i++) {
                printf("%d ", 2 * i);
            }
            printf("\n");
        }
        else if (tid == 1) {
            printf("Thread %d printing series of 4:\n", tid);
            for (int i = 1; i <= n; i++) {
                printf("%d ", 4 * i);
            }
            printf("\n");
        }
    }
    return 0;
}

Sample Output
Thread 0 printing series of 2:
2 4 6 8 10 12 14 16 18 20 
Thread 1 printing series of 4:
4 8 12 16 20 24 28 32 36 40
